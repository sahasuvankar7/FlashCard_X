datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // Optional for WebAuthn support
  type          String    @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Question {
  id      Int      @id @default(autoincrement())
  desc    String
  answers String[]
  answer  String
}

// model Card {
//   id        Int       @id @default(autoincrement())
//   createdAt DateTime  @default(now())
//   question  Question?
// }

// model Question {
//   id       Int    @id @default(autoincrement())
//   desc     String @db.VarChar(255)
//   cardId   Int    @unique
//   card     Card   @relation(fields: [cardId], references: [id])
//   answer   Answer @relation(fields: [answerId], references: [id])
//   answerId Int    @unique
// }

// model Answer {
//   id         Int       @id @default(autoincrement())
//   text       String    @db.VarChar(255)
//   questionId Int
//   question   Question? @relation
// }
